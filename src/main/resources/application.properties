# ini
spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI:mongodb://root:root@localhost:27017/mydb?authSource=admin}
mongock.migration-scan-package=rayyan.asia.infrastructure.migrations

server.error.include-message=always
server.port=8081

springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true

logging.level.org.springframework.security=DEBUG

mongock.enabled=true

logging.level.io.mongock=DEBUG

spring.autoconfigure.exclude=\
org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\
org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\
org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,\
org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration


# properties
# Tomcat access log (simple request/response lines in logs/logs)
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=logs
server.tomcat.accesslog.prefix=access_log
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b
server.tomcat.accesslog.rotate=true

# Make CommonsRequestLoggingFilter output visible
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

# Optional: tune application log level for the custom filter
logging.level.rayyan.asia.filter=INFO

# MongoDB driver and Spring Data MongoDB logging
logging.level.org.mongodb.driver=DEBUG
logging.level.org.mongodb.driver.protocol.command=DEBUG
logging.level.org.springframework.data.mongodb.core=DEBUG
logging.level.org.mongodb=DEBUG

# Kafka configuration: default is localhost:9093 (Docker Compose exposes 9093 for host clients)
# If running the app inside Docker Compose, set the env KAFKA_BOOTSTRAP_SERVERS=kafka:9092
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9093}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP:demo-group}
spring.kafka.consumer.auto-offset-reset=earliest

# LocalStack / AWS S3 settings (override via env vars when running in Docker Compose)
aws.endpoint=${AWS_ENDPOINT:http://localhost:4566}
aws.region=${AWS_REGION:us-east-1}
aws.accessKeyId=${AWS_ACCESS_KEY_ID:accessKey}
aws.secretKey=${AWS_SECRET_ACCESS_KEY:secretKey}
aws.s3.bucket=${AWS_S3_BUCKET:demo-bucket}
aws.s3.force-path-style=true

# application specific topics
app.topic.order-completed=order-completed
